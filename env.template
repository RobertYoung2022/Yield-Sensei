# YieldSensei Environment Configuration Template
# 
# This file contains all required and optional environment variables for YieldSensei.
# Copy this file to .env and fill in the values for your environment.
#
# SECURITY WARNING: Never commit .env files to version control!
# This template contains NO actual secrets - only placeholders and documentation.

# =============================================================================
# CRITICAL SECURITY VARIABLES (ALWAYS REQUIRED)
# =============================================================================

# JWT signing secret for authentication tokens
# Must be at least 32 characters long in production, 16 in development
# Generate with: openssl rand -base64 32
JWT_SECRET=your_jwt_secret_here_minimum_32_characters

# Encryption key for message bus and sensitive data
# Must be at least 32 characters long in production, 16 in development
# Generate with: openssl rand -base64 32
ENCRYPTION_KEY=your_encryption_key_here_minimum_32_characters

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Node.js environment (development, staging, production, test)
NODE_ENV=development

# Application port
PORT=3000

# Logging level (error, warn, info, debug, trace)
LOG_LEVEL=info

# =============================================================================
# POSTGRESQL DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL database host
POSTGRES_HOST=localhost

# PostgreSQL database port
POSTGRES_PORT=5432

# PostgreSQL database name
POSTGRES_DB=yieldsensei

# PostgreSQL database user
POSTGRES_USER=yieldsensei_app

# PostgreSQL database password (REQUIRED)
# Must be strong password in production
POSTGRES_PASSWORD=your_postgres_password_here

# Enable SSL for PostgreSQL connections (true/false)
# MUST be true in production
POSTGRES_SSL=false

# =============================================================================
# CLICKHOUSE DATABASE CONFIGURATION
# =============================================================================

# ClickHouse database host
CLICKHOUSE_HOST=localhost

# ClickHouse database port
CLICKHOUSE_PORT=8123

# ClickHouse database name
CLICKHOUSE_DATABASE=yieldsensei

# ClickHouse database user
CLICKHOUSE_USER=yieldsensei

# ClickHouse database password (REQUIRED)
# Must be strong password in production
CLICKHOUSE_PASSWORD=your_clickhouse_password_here

# =============================================================================
# REDIS CACHE CONFIGURATION
# =============================================================================

# Redis cache host
REDIS_HOST=localhost

# Redis cache port
REDIS_PORT=6379

# Redis cache password (optional but recommended)
REDIS_PASSWORD=your_redis_password_here

# Redis database number
REDIS_DB=0

# =============================================================================
# VECTOR DATABASE CONFIGURATION
# =============================================================================

# Vector database host (Qdrant)
VECTOR_DB_HOST=localhost

# Vector database port
VECTOR_DB_PORT=6333

# Vector database API key (REQUIRED)
VECTOR_DB_API_KEY=your_vector_db_api_key_here

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Rate limiting window in milliseconds
RATE_LIMIT_WINDOW_MS=60000

# Maximum requests per rate limit window
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Enable performance monitoring (true/false)
PERFORMANCE_MONITORING_ENABLED=false

# Metrics collection interval in milliseconds
METRICS_COLLECTION_INTERVAL=60000

# =============================================================================
# AI/ML API KEYS (OPTIONAL - Development/Staging)
# =============================================================================

# Anthropic API key for AI capabilities
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Perplexity API key for research capabilities
PERPLEXITY_API_KEY=your_perplexity_api_key_here

# OpenAI API key for AI capabilities
OPENAI_API_KEY=your_openai_api_key_here

# Google API key for external services
GOOGLE_API_KEY=your_google_api_key_here

# =============================================================================
# BLOCKCHAIN RPC ENDPOINTS (OPTIONAL)
# =============================================================================

# Ethereum RPC endpoint URL
ETHEREUM_RPC_URL=https://eth-mainnet.alchemyapi.io/v2/your_key

# Polygon RPC endpoint URL
POLYGON_RPC_URL=https://polygon-mainnet.alchemyapi.io/v2/your_key

# Arbitrum RPC endpoint URL
ARBITRUM_RPC_URL=https://arb-mainnet.alchemyapi.io/v2/your_key

# Optimism RPC endpoint URL
OPTIMISM_RPC_URL=https://opt-mainnet.alchemyapi.io/v2/your_key

# =============================================================================
# EXTERNAL SERVICE INTEGRATIONS (OPTIONAL)
# =============================================================================

# ElizaOS API key
ELIZAOS_API_KEY=your_elizaos_api_key_here

# ElizaOS webhook secret
ELIZAOS_WEBHOOK_SECRET=your_elizaos_webhook_secret_here

# Twitter API key
TWITTER_API_KEY=your_twitter_api_key_here

# Twitter API secret
TWITTER_API_SECRET=your_twitter_api_secret_here

# Discord bot token
DISCORD_BOT_TOKEN=your_discord_bot_token_here

# Telegram bot token
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# =============================================================================
# DEVELOPMENT CONFIGURATION (Development Only)
# =============================================================================

# Enable debug mode (true/false)
# WARNING: Never enable in production
DEBUG_MODE=false

# Mock external API calls (true/false)
# WARNING: Never enable in production
MOCK_EXTERNAL_APIS=false

# =============================================================================
# SECURITY NOTES
# =============================================================================
#
# 1. All secrets must be at least 32 characters long in production
# 2. Use strong, unique passwords for all databases
# 3. Enable SSL/TLS for all database connections in production
# 4. Never use localhost connections in production
# 5. Rotate secrets regularly
# 6. Use environment-specific secrets (different for dev/staging/prod)
# 7. Store secrets securely (use secret management systems)
# 8. Never commit .env files to version control
# 9. Use different API keys for different environments
# 10. Monitor and audit secret usage
#
# =============================================================================
# GENERATION COMMANDS
# =============================================================================
#
# Generate secure secrets:
#   JWT_SECRET: openssl rand -base64 32
#   ENCRYPTION_KEY: openssl rand -base64 32
#   Database passwords: openssl rand -base64 24
#   API keys: Use the respective service's key generation
#
# =============================================================================
# ENVIRONMENT-SPECIFIC REQUIREMENTS
# =============================================================================
#
# Development:
#   - Minimum 16 characters for secrets
#   - Localhost connections allowed
#   - Debug mode can be enabled
#   - Mock APIs can be enabled
#
# Staging:
#   - Minimum 32 characters for secrets
#   - No localhost connections
#   - SSL/TLS required
#   - Debug mode disabled
#   - Mock APIs disabled
#
# Production:
#   - Minimum 32 characters for secrets
#   - No localhost connections
#   - SSL/TLS required
#   - Debug mode disabled
#   - Mock APIs disabled
#   - All external API keys must be valid
#   - Strong rate limiting
#   - Monitoring enabled
#
# ============================================================================= 