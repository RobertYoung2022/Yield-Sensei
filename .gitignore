# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env*

# Build outputs
dist/
build/
target/
*.tgz
*.tar.gz

# Rust build artifacts
src/**/target/
*.rlib
*.rmeta
*.so
*.dylib
*.dll

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Logs
logs
*.log
dev-debug.log

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Docker
.dockerignore
docker-compose.override.yml
docker-compose.local.yml

# Database
*.sqlite
*.sqlite3
*.db

# Rust
target/
Cargo.lock

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# Machine Learning
models/
*.h5
*.pkl
*.joblib

# Monitoring and logs
monitoring/logs/
*.log

# Secrets and keys
*.pem
*.key
*.p12
*.pfx

# Backup files
*.bak
*.backup
*.old

# Test files
test-results/
playwright-report/
test-report/
test-data/
test-reports/

# Analytics and telemetry
.telemetry/

# Local development overrides
docker-compose.local.yml
.env.override

# Generated reports and data (but preserve AI tools)
reports/
temp/
coverage/

# Generated JSON reports (temporary files)
temp/*.json
test-reports/*.json
reports/*.json
reports/security_report_*.json
reports/fundamental-analysis-coverage.json
reports/task-*-package-update-summary.md
reports/database-security-report.md
reports/encryption-validation-report.md

# Preserve AI tools - DO NOT IGNORE
# .claude/ - Keep Claude AI assistant files
# .taskmaster/ - Keep Taskmaster files
# .serena/ - Keep Serena AI files
# .cursor/ - Keep Cursor IDE configuration

# Taskmaster specific exclusions (keep config but ignore generated files)
.taskmaster/reports/

# Serena specific exclusions (keep memories but ignore cache)
.serena/cache/

# Cursor specific exclusions (keep rules but ignore local settings)
# Personal AI configurations
.claude/
.cursor/
.serena/
.taskmaster/
.gemini/
.mcp.json
*.backup
env.template
.env copy.example

# Personal AI configurations - DO NOT TRACK
.claude/
.cursor/
.serena/
.taskmaster/
.gemini/
.mcp.json

# Personal documentation
CLAUDE.md
GEMINI.md
yield_sensei_PRD.txt

# Personal reports
security-assessment-report.md
security-audit-report.json
SECURITY_AND_STANDARDS_REVIEW.md

# Personal configs
env.template
.env copy.example
*.backup

# Test files
test-framework-validation.js

# Personal AI tool configurations
.serena/cache/
.taskmaster/reports/
.taskmaster/state.json
.taskmaster/config.json
.cursor/mcp.json
